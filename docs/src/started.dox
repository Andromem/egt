namespace egt { inline namespace v1 {
/**

 @page started Getting Started

@section started_fetching Fetching Source

@code{.sh}
git clone --recursive https://bitbucket.microchip.com/scm/linux4sam/egt.git
@endcode

@section started_building Building

EGT uses the autotools, like autoconf and automake, for building on Linux
platforms.

To build for a PC, first, install dependencies:

@code{.sh}
sudo apt-get install librapidxml-dev liblua5.3-dev libdrm-dev libinput-dev \
    libcairo-dev libjpeg-dev libmagic-dev libcurl4-openssl-dev
@endcode

Then build.

@code{.sh}
git clone --recursive https://bitbucket.microchip.com/scm/linux4sam/egt.git
cd egt
./autogen.sh
./configure --prefix=$HOME/egt_install
make
make install
@endcode

Then run.

@code{.sh}
export LD_LIBRARY_PATH=$HOME/egt_install/lib
cd $HOME/egt_install/bin
./basic
@endcode

EGT also supports cross compilation for target systems. To cross compile, follow
the standard instructions.

@code{.sh}
./autogen.sh
./configure --prefix=/nfsroot/root/egt/ --host=arm-buildroot-linux-gnueabi
make
@endcode

You can run "./configure --help" to see more options.  Some nonstandard
options are listed here.

@par --disable-debug
build without debugging support [default=yes]

@par --disable-examples
don't build examples [default=no]

@section started_first First Application

The *examples* folder of the EGT project contains various examples.  This is the
basic example which shows the minimum necessary to create a window with a button
on it.

The include file <egt/ui> contains most basic functionality needed.

@code{.cpp}
#include <egt/ui>

using namespace egt;

int main()
{
    Application app;

    TopWindow window;
    Button button(window, "Hello World");
    button.align(alignmask::center);
    window.show();

    return app.run();
}
@endcode

If you want to use a UI file instead.

@code{.cpp}
#include <egt/ui>
#include <egt/uiloader.h>

using namespace egt;

int main()
{
    Application app;

    experimental::UiLoader loader;
    auto window = loader.load("ui.xml");
    window->show();

    return app.run();
}
@endcode

*/
}}
