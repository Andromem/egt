namespace egt { inline namespace v1 {
/**

 @page resources Resources

This chapter discusses assets and how to distribute and use them.

Resources are a way of cataloging, distributing, and using asset data.  For
example image assets, icons, audio files, and video files can be included as
resources.  Resources may be stored in the filesystem and loaded on demand, or
they may be compiled into the application binary itself by using the *mresg*
command.

@section resources_paths File Paths

If an absolute file path is used, noting extra will happen.  That file path will
attempt to be accessed. However, if a relative path is given then a search will
happened by calling detail::resolve_file_path().  This function will search any
directory registered with detail::add_search_path().  The default paths setup
are searched in the following order:

- Data install path.
- EXE directory.
- EGT icon path.

@section resources_using Resources

To access a resource with a file path, specify an absolute or relative file path.

@code{.cpp}
auto play = Image("/some/path/play.png");
@endcode


@section resources_icons EGT Icons

EGT comes with a set of icons built in.  To access these icons, use the
following syntax:

@code{.cpp}
auto bug = Image("@bug.png");
@endcode


@section resources_mresg Resource Generator

This is a tool used to generate a resource file that contains the data of binary
blobs of data that can then in turn directly be used in an application when, for
example, referring an image.

Instead of using a filesystem path to a file, prefix the path with a colon (":")
to interpret the path as a resource.  Periods are replaced with underscores.

@code{.cpp}
auto play = Image(":play_png");
@endcode

*/
}}
